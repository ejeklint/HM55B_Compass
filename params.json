{"name":"HM55B Compass","body":"<img src=\"http://dl.dropbox.com/u/57667211/compass.png\" width=\"110\" height=\"110\" align=\"left\"/>\r\n### It's all about directions\r\nHM55B_Compass is an Arduino library that makes access to the digital compass module from Parallax super simple. There is another solution in the Arduino Playground which has great information on how to connect the module, but it's makes your code more cluttered. This library should run a tiny little bit faster and waste a few precious bytes less.\r\n\r\nAfter installing the library (see [here](http://arduino.cc/en/Reference/Libraries) on how to install contributed libraries), use it as simple as this:\r\n\r\n```c++\r\n#include <HM55B_Compass.h>\r\n\r\n// Create an instance of compass.\r\n// Clock on pin 8, Enable on pin 9, dataIO on pin 10.\r\nHM55B_Compass compass(8, 9, 10);\r\n\r\nvoid setup() {\r\n  Serial.begin(57600);\r\n  // Initialize the module before first use.\r\n  compass.initialize();\r\n}\r\n\r\nvoid loop() {\r\n  // Read uncalibrated compass value. This takes ~45 ms.\r\n  // Gives angle +/- 180Â° from north. Negative values to east,\r\n  // positive to west.\r\n  int angle = compass.read();\r\n  // NO_VALUE will be returned if the measuring failed.\r\n  if (angle == HM55B_Compass::NO_VALUE) {\r\n    Serial.println(\"Uh-oh\");\r\n  }\r\n  else {\r\n    Serial.println(angle);\r\n  }\r\n}\r\n```\r\n\r\nNext version, if there will be one, will support calibration. This is needed in appliances that contain disturbances in the magnetic field.\r\n\r\n_Enjoy!_\r\n","tagline":"An easy to use Arduino class for the HM55B digital compass module","google":"UA-3389877-1","note":"Don't delete this file! It's used internally to help with page regeneration."}